/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_NETWORKING_PB_H_INCLUDED
#define PB_NETWORKING_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _MsgSocketOpenRequest { 
    uint32_t domain; 
    uint32_t type; 
    uint32_t protocol; 
} MsgSocketOpenRequest;

typedef struct _MsgSocketOpenResponse { 
    int32_t handle; 
} MsgSocketOpenResponse;

typedef struct _MsgRequest { 
    pb_size_t which_payload;
    union {
        MsgSocketOpenRequest socketOpenRequest;
    } payload; 
} MsgRequest;

typedef struct _MsgResponse { 
    pb_size_t which_payload;
    union {
        MsgSocketOpenResponse socketOpenResponse;
    } payload; 
} MsgResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define MsgSocketOpenRequest_init_default        {0, 0, 0}
#define MsgSocketOpenResponse_init_default       {0}
#define MsgRequest_init_default                  {0, {MsgSocketOpenRequest_init_default}}
#define MsgResponse_init_default                 {0, {MsgSocketOpenResponse_init_default}}
#define MsgSocketOpenRequest_init_zero           {0, 0, 0}
#define MsgSocketOpenResponse_init_zero          {0}
#define MsgRequest_init_zero                     {0, {MsgSocketOpenRequest_init_zero}}
#define MsgResponse_init_zero                    {0, {MsgSocketOpenResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MsgSocketOpenRequest_domain_tag          1
#define MsgSocketOpenRequest_type_tag            2
#define MsgSocketOpenRequest_protocol_tag        3
#define MsgSocketOpenResponse_handle_tag         1
#define MsgRequest_socketOpenRequest_tag         1
#define MsgResponse_socketOpenResponse_tag       1

/* Struct field encoding specification for nanopb */
#define MsgSocketOpenRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   domain,            1) \
X(a, STATIC,   REQUIRED, UINT32,   type,              2) \
X(a, STATIC,   REQUIRED, UINT32,   protocol,          3)
#define MsgSocketOpenRequest_CALLBACK NULL
#define MsgSocketOpenRequest_DEFAULT NULL

#define MsgSocketOpenResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    handle,            1)
#define MsgSocketOpenResponse_CALLBACK NULL
#define MsgSocketOpenResponse_DEFAULT NULL

#define MsgRequest_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,socketOpenRequest,payload.socketOpenRequest),   1)
#define MsgRequest_CALLBACK NULL
#define MsgRequest_DEFAULT NULL
#define MsgRequest_payload_socketOpenRequest_MSGTYPE MsgSocketOpenRequest

#define MsgResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,socketOpenResponse,payload.socketOpenResponse),   1)
#define MsgResponse_CALLBACK NULL
#define MsgResponse_DEFAULT NULL
#define MsgResponse_payload_socketOpenResponse_MSGTYPE MsgSocketOpenResponse

extern const pb_msgdesc_t MsgSocketOpenRequest_msg;
extern const pb_msgdesc_t MsgSocketOpenResponse_msg;
extern const pb_msgdesc_t MsgRequest_msg;
extern const pb_msgdesc_t MsgResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MsgSocketOpenRequest_fields &MsgSocketOpenRequest_msg
#define MsgSocketOpenResponse_fields &MsgSocketOpenResponse_msg
#define MsgRequest_fields &MsgRequest_msg
#define MsgResponse_fields &MsgResponse_msg

/* Maximum encoded size of messages (where known) */
#define MsgRequest_size                          20
#define MsgResponse_size                         13
#define MsgSocketOpenRequest_size                18
#define MsgSocketOpenResponse_size               11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
