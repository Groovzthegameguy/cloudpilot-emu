name: Build and upload release artifacts
on:
  push:
    tags:
      - "*"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PYTHON_VERSION: 3.9
  TAG: ${GITHUB_REF##*/}
  SERVER_DIRECTORY: cloudpilot-server-${GITHUB_REF##*/}
  RELEASE_NOTES: |
    **MacOS:** Please run \`xattr -rd com.apple.quarantine cloudpilot-server-${GITHUB_REF##*/}\`
    in order to remove the server components from quarantine before you run the server for
    the first time. The first start may take a few seconds.
  RELEASE_TITLE: Cloudpilot ${GITHUB_REF##*/}
  ARCHIVE_MACOS: cloudpilot-server-${GITHUB_REF##*/}-macos-x64.zip
  ARCHIVE_WINDOWS: cloudpilot-server-${GITHUB_REF##*/}-win-x64.zip
  ARCHIVE_LINUX: cloudpilot-server-${GITHUB_REF##*/}-linux-x64.tar.gz
jobs:
  create-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release
        run: gh release create ${{ env.TAG }} -d -t "${{ env.RELEASE_TITLE }}" -n "${{ env.RELEASE_NOTES }}"
  build-server-linux:
    runs-on: ubuntu-18.04
    needs: create-release
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and upload
        shell: bash
        run: |
          pip install pipenv
          cd server
          echo "VERSION = \"${{ env.TAG }}\"" > version.py
          pipenv install --python ${{ env.PYTHON_VERSION }}
          pipenv run build
          cd dist
          mv cloudpilot-server ${{ env.SERVER_DIRECTORY }}
          tar -czf ${{ env.ARCHIVE_LINUX }} ${{ env.SERVER_DIRECTORY }}
          gh release upload ${{ env.TAG }} ${{ env.ARCHIVE_LINUX }}
  build-server-windows:
    runs-on: windows-2019
    needs: create-release
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and upload
        shell: bash
        run: |
          pip install pipenv
          cd server
          echo "VERSION = \"${{ env.TAG }}\"" > version.py
          pipenv install --python ${{ env.PYTHON_VERSION }}
          pipenv run build
          cd dist
          mv cloudpilot-server ${{ env.SERVER_DIRECTORY }}
          7z a -r ${{ env.ARCHIVE_WINDOWS }} ${{ env.SERVER_DIRECTORY }}
          gh release upload ${{ env.TAG }} ${{ env.ARCHIVE_WINDOWS }}
  build-server-macos:
    runs-on: macos-10.15
    needs: create-release
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{env.PYTHON_VERSION}}
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and upload
        shell: bash
        run: |
          pip install pipenv
          cd server
          echo "VERSION = \"${{ env.TAG }}\"" > version.py
          pipenv install --python ${{ env.PYTHON_VERSION }}
          pipenv run build
          cd dist
          codesign -fs - cloudpilot-server/cloudpilot-server
          mv cloudpilot-server ${{ env.SERVER_DIRECTORY }}
          zip -r ${{ env.ARCHIVE_MACOS }} ${{ env.SERVER_DIRECTORY }}
          gh release upload ${{ env.TAG }} ${{ env.ARCHIVE_MACOS }}
